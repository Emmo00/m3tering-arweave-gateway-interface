type Meter {
  meterNumber: Int!
  publicKey: String
}

type MeterDataPointPayload {
  nonce: Int
  voltage: Float
  energy: Float
  longitude: Float
  latitude: Float
  signature: String
  publicKey: String
}

type MeterDataPoint {
  transactionId: ID!
  meterNumber: Int!
  timestamp: Float
  payload: MeterDataPointPayload
}

type MeterDataPointEdge {
  cursor: String
  node: MeterDataPoint
}

enum MeterDataPointOrderBy {
  HEIGHT_ASC
  HEIGHT_DESC
}

type Query {
  version: String
  meters: [Meter!]!
  meter(meterNumber: Int!): Meter

  meterDataPoints(
    meterNumber: Int!
    first: Int
    after: String
    sortBy: MeterDataPointOrderBy
    nonces: [Int!]
  ): [MeterDataPointEdge!]!
}
