type Meter {
  meterNumber: ID!
  contractId: String
  publicKey: String
}

type MeterDataPointPayload {
  nonce: Int
  voltage: Float
  current: Float
  energy: Float
  signature: String
  publicKey: String
}

type MeterDataPoint {
  transactionId: ID!
  contractId: String
  meterNumber: String
  timestamp: Int
  payload: MeterDataPointPayload
}

type MeterDataPointEdge {
  cursor: String
  node: MeterDataPoint
}

enum MeterDataPointOrderBy {
  HEIGHT_ASC
  HEIGHT_DESC
}

type Query {
  meters: [Meter!]!
  meter(meterNumber: String, contractId: String): Meter

  meterDataPoints(
    meterNumber: String
    contractId: String
    first: Int
    after: String
    sortBy: MeterDataPointOrderBy
  ): [MeterDataPointEdge!]!
}
